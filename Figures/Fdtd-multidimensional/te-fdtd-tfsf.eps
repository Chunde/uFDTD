%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 3.2%%AI8_CreatorVersion: 10.0%%For: (John Schneider) (Washington State University)%%Title: (te-fdtd-tfsf.eps)%%CreationDate: 10/15/05 2:03 PM%%BoundingBox: 31 281 547 658%%DocumentProcessColors: Black%%DocumentFonts: Times-Roman%%DocumentNeededFonts: Times-Roman%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_typography_AI3 1.0 1%%+ procset Adobe_pattern_AI3 1.0 0%%+ procset Adobe_Illustrator_AI3 1.0 1%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI3_TemplateBox: 306.5 395.5 306.5 395.5%AI3_TileBox: 30 31 582 761%AI3_DocumentPreview: Header%%PageOrigin:30 31%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -31 -30 31%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0%%Title: (Packed Array Operators)%%Version: 2.0 0%%CreationDate: (8/2/90) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_packedarray 5 dict dup begin put/initialize{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end	} ifelse} def/terminate{} def/packedarray{array astore readonly} def/setpacking{pop} def/currentpacking{false} defcurrentdict readonly pop end%%EndResourceAdobe_packedarray /initialize get exec%%BeginResource: procset Adobe_cshow 1.1 0%%Title: (cshow Operator)%%Version: 1.1 0%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end end	} ifelse} def/terminate{} def/cshow{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_customcolor 1.0 0%%Title: (Custom Color Operators)%%Version: 1.0 0%%CreationDate: (5/9/88) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall end	Adobe_customcolor begin	} ifelse} def/terminate{currentdict Adobe_customcolor eq	{ end	} if} def/findcmykcustomcolor{5 packedarray}  def/setcustomcolor{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint{pop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_typography_AI3 2.0 0%%Title: (Typography Operators)%%Version: 2.0 0%%CreationDate:(5/31/90) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI3 48 dict dup begin put/initialize{/TZ where	{	pop	}	{	Adobe_typography_AI3 begin	Adobe_typography_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall end	Adobe_typography_AI3 begin	} ifelse} def/terminate{currentdict Adobe_typography_AI3 eq	{ end	} if} def/modifyEncoding{	/_tempEncode exch ddef		/_pntr 0 ddef		{		counttomark -1 roll		dup type dup /marktype eq 				{			pop pop exit		}		{			/nametype eq			{				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				/_pntr exch ddef								}			ifelse		}		ifelse	}	loop			_tempEncode}def/TE{	StandardEncoding 256 array copy modifyEncoding 	/_nativeEncoding exch def} def%/TZ		{	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 	/_useNativeEncoding exch def	pop pop		findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict	 begin			mark exch		{			1 index /FID ne { def } if cleartomark mark		}		forall		pop				/FontName exch def				counttomark 0 eq		{			1 _useNativeEncoding eq			{				/Encoding _nativeEncoding def			}			if			cleartomark		}		{				/Encoding load 256 array copy 			modifyEncoding /Encoding exch def		}		ifelse				FontName currentdict end		definefont pop}def/tr{_ax _ay 3 2 roll} def/trj{_cx _cy _sp _ax _ay 6 5 roll} def/a0{/Tx	{	dup 	currentpoint 3 2 roll	tr _psf	newpath moveto	tr _ctm _pss	} ddef/Tj	{	dup	currentpoint 3 2 roll	trj _pjsf	newpath moveto	trj _ctm _pjss	} ddef	} def/a1{/Tx	{	dup currentpoint 4 2 roll gsave	dup currentpoint 3 2 roll	tr _psf	newpath moveto	tr _ctm _pss	grestore 3 1 roll moveto tr sp	} ddef/Tj	{	dup currentpoint 4 2 roll gsave	dup currentpoint 3 2 roll	trj _pjsf	newpath moveto	trj _ctm _pjss	grestore 3 1 roll moveto tr sp	} ddef	} def/e0{/Tx	{	tr _psf	} ddef/Tj	{	trj _pjsf	} ddef} def/e1{/Tx	{	dup currentpoint 4 2 roll gsave 	tr _psf  	grestore 3 1 roll moveto tr sp 	} ddef/Tj	{	dup currentpoint 4 2 roll gsave 	trj _pjsf	grestore 3 1 roll moveto tr sp 	} ddef} def/i0{/Tx	{	tr sp	} ddef/Tj	{	trj jsp	} ddef} def/i1{W N} def/o0{/Tx	{	tr sw rmoveto	} ddef/Tj	{	trj swj rmoveto	} ddef} def/r0{/Tx	{	tr _ctm _pss	} ddef/Tj	{	trj _ctm _pjss	} ddef} def/r1{/Tx	{	dup currentpoint 4 2 roll currentpoint gsave newpath moveto	tr _ctm _pss 	grestore 3 1 roll moveto tr sp 	} ddef/Tj	{	dup currentpoint 4 2 roll currentpoint gsave newpath moveto	trj _ctm _pjss	grestore 3 1 roll moveto tr sp 	} ddef} def/To{	pop _ctm currentmatrix pop} def/TO{	iTe _ctm setmatrix newpath} def/Tp{	pop _tm astore pop _ctm setmatrix 	_tDict begin /W {} def /h {} def} def/TP{ end	iTm 0 0 moveto} def/Tr{	_render 3 le {currentpoint newpath moveto} if	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm{_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm{_tm astore pop iTm 0 0 moveto} def/Td{_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/iTe{	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse	/_render -1 ddef} def/Ta{pop} def/Tf{dup 1000 div /_fScl exch ddefexch findfont exch scalefont setfont} def/Tl{pop0 exch _leading astore pop} def/Tt{pop} def/TW{3 npop} def/Tw{/_cx exch ddef} def/TC{3 npop} def/Tc{/_ax exch ddef} def/Ts{/_rise exch ddefcurrentpointiTmmoveto} def/Ti{3 npop} def/Tz{100 div /_hs exch ddefiTm} def/TA{pop} def/Tq{pop} def/Th{pop pop pop pop pop} def/TX {pop} def%/Tx%/Tj/Tk{exch pop _fScl mul neg 0 rmoveto} def/TK{2 npop} def/T*{_leading aload pop neg Td} def/T*-{_leading aload pop Td} def/T-{_hyphen Tx} def/T+{} def/TR{_ctm currentmatrix pop 	_tm astore pop iTm 0 0 moveto } def/TS{0 eq {Tx} {Tj} ifelse} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_pattern_AI3 1.1 0%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)%%Version: 1.1 0%%CreationDate: (7/21/89) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_pattern_AI3 16 dict dup begin put/initialize{/definepattern where	{	pop	}	{	Adobe_pattern_AI3 begin	Adobe_pattern_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall	mark	cachestatus 7 1 roll pop pop pop pop exch pop exch		{		{		10000 add		dup 2 index gt			{			exit			} if		dup setcachelimit		} loop		} stopped	cleartomark	} ifelse} def/terminate{currentdict Adobe_pattern_AI3 eq	{ end	} if} deferrordict/nocurrentpoint{popstop} puterrordict/invalidaccess{popstop} put/patternencoding256 array def0 1 255{patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{17 dict begin/uniform exch def/cache exch def/key exch def/procarray exch def/mtx exch matrix invertmatrix def/height exch def/width exch def/ctm matrix currentmatrix def/ptm matrix def/str 32 string def/slice 9 dict defslice /s 1 putslice /q 256 procarray length div sqrt floor cvi putslice /b 0 put/FontBBox [0 0 0 0] def/FontMatrix mtx matrix copy def/Encoding patternencoding def/FontType 3 def/BuildChar	{	exch begin	/setstrokeadjust where {pop true setstrokeadjust} if	slice begin	dup q dup mul mod s idiv /i exch def	dup q dup mul mod s mod /j exch def	q dup mul idiv procarray exch get	/xl j width s div mul def	/xg j 1 add width s div mul def	/yl i height s div mul def	/yg i 1 add height s div mul def	uniform		{		1 1		}		{		width 0 dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		0 height dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse	width 0 cache		{		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul		setcachedevice		}		{		setcharwidth		} ifelse	gsave	scale	newpath	xl yl moveto	xg yl lineto	xg yg lineto	xl yg lineto	closepath	clip	newpath end end	exec	grestore	} defkey currentdict definefontend} def/patterncachesize{gsavenewpath0 0 movetowidth 0 linetowidth height lineto0 height linetoclosepathpatternmatrix setmatrixpathbboxexch ceiling 4 -1 roll floor sub 3 1 rollceiling exch floor submul 1 addgrestore} def/patterncachelimit{cachestatus 7 1 roll 6 npop 8 mul} def/patternpath{exch dup begin setfontctm setmatrixconcatslice exch /b exch slice /q get dup mul mul putFontMatrix concatuniform	{	width 0 dtransform round width div exch round width div exch	0 height dtransform round height div exch height div exch	0 0 transform round exch round exch	ptm astore setmatrix	}	{	ptm currentmatrix pop	} ifelse{currentpoint} stopped not	{	2 npop	pathbbox	true	4 index 3 index eq	4 index 3 index eq	and		{		pop false			{			{2 npop}			{3 npop true}			{7 npop true}			{pop true}			pathforall			} stopped			{			5 npop true			} if		} if		{		height div ceiling height mul 4 1 roll		width div ceiling width mul 4 1 roll		height div floor height mul 4 1 roll		width div floor width mul 4 1 roll		2 index sub height div ceiling cvi exch		3 index sub width div ceiling cvi exch		4 2 roll moveto		FontMatrix mtx invertmatrix		dup dup 4 get exch 5 get rmoveto		ptm ptm concatmatrix pop		slice /s		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi		dup slice /q get gt			{			pop slice /q get			} if		put		0 1 slice /s get dup mul 1 sub			{			slice /b get add			gsave			0 1 str length 1 sub				{				str exch 2 index put				} for			pop			dup				{				gsave				ptm setmatrix				1 index str length idiv {str show} repeat				1 index str length mod str exch 0 exch getinterval show				grestore				0 height rmoveto				} repeat			grestore			} for		2 npop		}		{		4 npop		} ifelse	} ifend} def/patternclip{clip} def/patternstrokepath{strokepath} def/patternmatrixmatrix def/patternfill{dup type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get	} ifgsavepatternclipAdobe_pattern_AI3 /patternpath get execgrestorenewpath} def/patternstroke{dup type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get	} ifgsavepatternstrokepathtrue	{		{			{			newpath 			moveto			}			{			lineto			}			{			curveto			}			{			closepath			3 copy			Adobe_pattern_AI3 /patternfill get exec			} pathforall		3 npop		} stopped			{			5 npop			patternclip			Adobe_pattern_AI3 /patternfill get exec			} if	}	{	patternclip	Adobe_pattern_AI3 /patternfill get exec	} ifelsegrestorenewpath} def/patternashow{3 index type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get 4 1 roll	} if	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath currentpoint	6 index 6 index 6 index	Adobe_pattern_AI3 /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow5 npop} def/patternawidthshow{6 index type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get 7 1 roll	} if	{	2 npop (0) exch	2 copy 0 exch put 	gsave	_sp eq {5 index 5 index rmoveto} if	false charpath currentpoint	9 index 9 index 9 index	Adobe_pattern_AI3 /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow8 npop} def/patternashowstroke{4 index type /dicttype eq	{	patternmatrix /patternmatrix get 5 1 roll	} if4 1 roll	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	7 index 7 index 7 index	Adobe_pattern_AI3 /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow6 npop} def/patternawidthshowstroke{7 index type /dicttype eq	{	patternmatrix /patternmatrix get 8 1 roll	} if7 1 roll	{	2 npop (0) exch	2 copy 0 exch put	gsave	_sp eq {5 index 5 index rmoveto} if	false charpath currentpoint	7 index setmatrix	10 index 10 index 10 index	Adobe_pattern_AI3 /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow9 npop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)%%Version: 1.1 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI3 71 dict dup begin put/initialize{userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_pjsf {} def/_pjss {} def/_pola 0 def/_doClip 0 def/cf	currentflat def/_tm matrix def/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def /_renderEnd [null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_rise 0 def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading [0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_wv 0 def/Tx {} def/Tj {} def/CRender {} def/_AI3_savepage {} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null defAdobe_Illustrator_AI3 beginAdobe_Illustrator_AI3 dup /nc get begin	{	dup xcheck		{		bind		} if	pop pop	} forallendendendAdobe_Illustrator_AI3 beginAdobe_Illustrator_AI3_vars beginnewpath} def/terminate{endend} def/_null def/ddef{Adobe_Illustrator_AI3_vars 3 1 roll put} def/xput{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop{	{	pop	} repeat} def/sw{dup length exch stringwidthexch 5 -1 roll 3 index mul add4 1 roll 3 1 roll mul add} def/swj{dup 4 1 rolldup length exch stringwidth exch 5 -1 roll 3 index mul add4 1 roll 3 1 roll mul add 6 2 roll /_cnt 0 ddef{1 index eq {/_cnt _cnt 1 add ddef} if} forall popexch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss{4 1 roll	{	2 npop 	(0) exch 2 copy 0 exch put pop	gsave	false charpath currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/jss{4 1 roll	{	2 npop 	(0) exch 2 copy 0 exch put 	gsave	_sp eq 		{		exch 6 index 6 index 6 index 5 -1 roll widthshow  		currentpoint		}		{		false charpath currentpoint		4 index setmatrix stroke		}ifelse	grestore	moveto	2 copy rmoveto	} exch cshow6 npop} def/sp{	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/jsp{	{	2 npop 	(0) exch 2 copy 0 exch put 	_sp eq 		{		exch 5 index 5 index 5 index 5 -1 roll widthshow  		}		{		false charpath		}ifelse	2 copy rmoveto	} exch cshow5 npop} def/pl{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where	{	pop true setstrokeadjust	/c	{	curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{	2 copy curveto	} def	/Y	/y load def	/l	{	lineto	} def	/L	/l load def	/m	{	moveto	} def	}	{	/c	{	pl curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{	pl 2 copy curveto	} def	/Y	/y load def	/l	{	pl lineto	} def	/L	/l load def	/m	{	pl moveto	} def	} ifelse/d{setdash} def/cf	{} def/i{dup 0 eq	{	pop cf	} ifsetflat} def/j{setlinejoin} def/J{setlinecap} def/M{setmiterlimit} def/w{setlinewidth} def/H{} def/h{closepath} def/N{_pola 0 eq 	{	_doClip 1 eq {clip /_doClip 0 ddef} if 	newpath	} 	{	/CRender {N} ddef	}ifelse} def/n{N} def/F{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _pf grestore clip newpath /_lp /none ddef _fc 		/_doClip 0 ddef		}		{		_pf		}ifelse	} 	{	/CRender {F} ddef	}ifelse} def/f{closepathF} def/S{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _ps grestore clip newpath /_lp /none ddef _sc 		/_doClip 0 ddef		}		{		_ps		}ifelse	} 	{	/CRender {S} ddef	}ifelse} def/s{closepathS} def/B{_pola 0 eq 	{	_doClip 1 eq	gsave F grestore 		{		gsave S grestore clip newpath /_lp /none ddef _sc		/_doClip 0 ddef		} 		{		S		}ifelse	}	{	/CRender {B} ddef	}ifelse} def/b{closepathB} def/W{/_doClip 1 ddef} def/*{count 0 ne 	{	dup type (stringtype) eq {pop} if	} if _pola 0 eq {newpath} if} def/u{} def/U{} def/q{_pola 0 eq {gsave} if} def/Q{_pola 0 eq {grestore} if} def/*u{_pola 1 add /_pola exch ddef} def/*U{_pola 1 sub /_pola exch ddef _pola 0 eq {CRender} if} def/D{pop} def/*w{} def/*W{} def/`{/_i save ddef6 1 roll 4 npopconcat popuserdict begin/showpage {} def0 setgray0 setlinecap1 setlinewidth0 setlinejoin10 setmiterlimit[] 0 setdash/setstrokeadjust where {pop false setstrokeadjust} ifnewpath0 setgrayfalse setoverprint} def/~{end_i restore} def/@{} def/&{} def/O{0 ne/_of exch ddef/_lp /none ddef} def/R{0 ne/_os exch ddef/_lp /none ddef} def/g{/_gf exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/G{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/k{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/K{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/x{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/X{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/dp{dup null eq{pop_dp 0 ne	{	0 1 _dp 1 sub _dl mod		{		_da exch get 3 get		} for	_dp 1 sub _dl mod 1 add packedarray	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll	definepattern pop	} if}{_dp 0 ne _dp _dl mod 0 eq and	{	null dp	} if7 packedarray _da exch _dp _dl mod exch put_dp _dl mod _da 0 get 4 get 2 packedarray/_dp _dp 1 add def} ifelse} def/E{_ed begindup 0 get type /arraytype ne	{	0		{		dup 1 add index type /arraytype eq			{			1 add			}			{			exit			} ifelse		} loop	array astore	} if/_dd exch def/_ury exch def/_urx exch def/_lly exch def/_llx exch def/_n exch def/_y 0 def/_dl 4 def/_dp 0 def/_da _dl array def0 1 _dd length 1 sub	{	/_d exch _dd exch get def	0 2 _d length 2 sub		{		/_x exch def		/_c _d _x get _ ne def		/_r _d _x 1 add get cvlit def		_r _ ne			{			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 				[				/save cvx				_llx neg _lly neg /translate cvx				_c					{					nc /begin cvx					} if				_r dup type /stringtype eq					{					cvx					}					{					{exec} /forall cvx					} ifelse				_c					{					/end cvx					} if				/restore cvx				] cvx			/_fn 12 _n length add string def			_y _fn cvs pop			/_y _y 1 add def			_fn 12 _n putinterval			_fn _c false dp			_d exch _x 1 add exch put			} if		} for	} fornull dp_n _dd /_pdend xput} def/fc{_fm dup concatmatrix pop} def/p{/_fm exch ddef9 -2 roll _pm translate fc7 -2 roll _pm scale fc5 -1 roll _pm rotate fc4 -2 roll exch 0 ne	{	dup _pm rotate fc	1 -1 _pm scale fc	neg _pm rotate fc	}	{	pop	} ifelsedup _pm rotate fcexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore fcneg _pm rotate fc_pd exch get /_fdd exch ddef/_pf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			patternfill			}			{			pop			fill			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_psf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			9 copy 6 npop patternashow			}			{			pop			6 copy 3 npop ashow			} ifelse		grestore		pop		} for	pop	} forrestore%3 npop newpathsw rmoveto} ddef/_pjsf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			12 copy 6 npop patternawidthshow			}			{			pop 9 copy 3 npop awidthshow			} ifelse		grestore		pop		} for	pop	} forrestoreswj rmoveto} ddef/_lp /none ddef} def/sc{_sm dup concatmatrix pop} def/P{/_sm exch ddef9 -2 roll _pm translate sc7 -2 roll _pm scale sc5 -1 roll _pm rotate sc4 -2 roll exch 0 ne	{	dup _pm rotate sc	1 -1 _pm scale sc	neg _pm rotate sc	}	{	pop	} ifelsedup _pm rotate scexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore scneg _pm rotate sc_pd exch get /_sdd exch ddef/_ps{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			patternstroke			}			{			pop stroke			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_pss{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			10 copy 6 npop patternashowstroke			}			{			pop 7 copy 3 npop ss			} ifelse		grestore		pop		} for	pop	} forrestorepop sw rmoveto} ddef/_pjss{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			13 copy 6 npop patternawidthshowstroke			}			{			pop 10 copy 3 npop jss			} ifelse		grestore		pop		} for	pop	} forrestorepop swj rmoveto} ddef/_lp /none ddef} def/A{pop} def/nc 3 dict defnc begin/setgray{pop} bind def/setcmykcolor{4 npop} bind def/setcustomcolor{2 npop} bind defcurrentdict readonly pop endcurrentdict readonly pop endsetpacking/annotatepage{} def%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: Times-RomanAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_typography_AI3 /initialize get execAdobe_pattern_AI3 /initialize get execAdobe_Illustrator_AI3 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Times-Roman Times-Roman[/_Times-Roman/Times-Roman 0 0 0 TZ%AI3_EndEncoding TrueType%AI3_BeginPattern: (Azure Rings)(Azure Rings) 22.5 22.5 58.5 58.5 [%AI3_Tile(0 O 0 R 0.9569 0.9294 0 0 k 0.9569 0.9294 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1.75 w 4 M []0 d40.5 58.5 m40.5 48.5586 32.4409 40.5 22.5 40.5 c12.5591 40.5 4.5 48.5586 4.5 58.5 c4.5 68.4414 12.5591 76.5 22.5 76.5 c32.4409 76.5 40.5 68.4414 40.5 58.5 cs40.5 22.5 m40.5 12.5586 32.4409 4.5 22.5 4.5 c12.5591 4.5 4.5 12.5586 4.5 22.5 c4.5 32.4414 12.5591 40.5 22.5 40.5 c32.4409 40.5 40.5 32.4414 40.5 22.5 cs40.5 40.5 m40.5 30.5586 32.4409 22.5 22.5 22.5 c12.5591 22.5 4.5 30.5586 4.5 40.5 c4.5 50.4414 12.5591 58.5 22.5 58.5 c32.4409 58.5 40.5 50.4414 40.5 40.5 cs58.5 58.5 m58.5 48.5586 50.4409 40.5 40.5 40.5 c30.5591 40.5 22.5 48.5586 22.5 58.5 c22.5 68.4414 30.5591 76.5 40.5 76.5 c50.4409 76.5 58.5 68.4414 58.5 58.5 cs58.5 22.5 m58.5 12.5586 50.4409 4.5 40.5 4.5 c30.5591 4.5 22.5 12.5586 22.5 22.5 c22.5 32.4414 30.5591 40.5 40.5 40.5 c50.4409 40.5 58.5 32.4414 58.5 22.5 cs58.5 40.5 m58.5 30.5586 50.4409 22.5 40.5 22.5 c30.5591 22.5 22.5 30.5586 22.5 40.5 c22.5 50.4414 30.5591 58.5 40.5 58.5 c50.4409 58.5 58.5 50.4414 58.5 40.5 cs76.5 58.5 m76.5 48.5586 68.4409 40.5 58.5 40.5 c48.5591 40.5 40.5 48.5586 40.5 58.5 c40.5 68.4414 48.5591 76.5 58.5 76.5 c68.4409 76.5 76.5 68.4414 76.5 58.5 cs76.5 22.5 m76.5 12.5586 68.4409 4.5 58.5 4.5 c48.5591 4.5 40.5 12.5586 40.5 22.5 c40.5 32.4414 48.5591 40.5 58.5 40.5 c68.4409 40.5 76.5 32.4414 76.5 22.5 cs76.5 40.5 m76.5 30.5586 68.4409 22.5 58.5 22.5 c48.5591 22.5 40.5 30.5586 40.5 40.5 c40.5 50.4414 48.5591 58.5 58.5 58.5 c68.4409 58.5 76.5 50.4414 76.5 40.5 cs%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Camouflage)(Camouflage) 1 1 73 73 [%AI3_Tile(0 O 0 R 0.6 0.1412 0.9373 0.0275 k 0.6 0.1412 0.9373 0.0275 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 73 m1 1 L73 1 L73 73 L1 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.4941 0.3529 0.9529 0.2 k 0.4941 0.3529 0.9529 0.2 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d18.5449 73 m18.5449 1 L46.7832 1 L46.7832 73 L18.5449 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.1882 0.1098 0.9059 0.0157 k 0.1882 0.1098 0.9059 0.0157 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d11.9512 1 m11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c9.2314 10.2334 4.25 10.2334 4.25 13.8735 c4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c10.0313 24.832 10.208 24.832 10.208 28.5654 c10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c4.6631 69.1636 11.9512 69.3184 11.9512 73 C27.9268 73 L27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c26.3945 24.832 24.4248 24.832 24.4248 21.0991 c24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c24.6055 2.8813 27.9268 4.7129 27.9268 1 C11.9512 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.9216 0.2157 0.9451 0.0745 k 0.9216 0.2157 0.9451 0.0745 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d41.875 1 m41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c41.5742 24.832 43.6484 24.832 43.6484 28.5659 c43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c40.6289 69.1636 41.875 69.3184 41.875 73 C59.0752 73 L59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c55.8945 55.502 61.0059 55.502 61.0059 51.7886 c61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c60.5635 40.897 59.9277 40.897 59.9277 37.2842 c59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c55.7461 3.978 59.0752 4.6484 59.0752 1 C41.875 1 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Honeycomb)(Honeycomb) 12.9819 14.6548 65.8066 60.6758 [%AI3_Tile(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d64.0161 21.3906 m64.0161 7.9009 L52.3345 1.1543 L40.6475 7.9009 L40.6475 21.3906 L52.3345 28.1372 L64.0161 21.3906 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d43.9536 19.4839 m43.9536 9.8081 L52.3345 4.9702 L60.7153 9.8081 L60.7153 19.4839 L52.3345 24.3218 L43.9536 19.4839 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d37.479 21.394 m37.479 7.9014 L25.7944 1.1548 L14.1099 7.9014 L14.1099 21.3911 L25.7944 28.1406 L37.479 21.394 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d17.4126 19.4839 m17.4126 9.8081 L25.7944 4.9702 L34.1743 9.8081 L34.1743 19.4839 L25.7944 24.3218 L17.4126 19.4839 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d24.3691 44.0386 m24.3691 30.5459 L12.6846 23.7993 L1 30.5459 L1 44.0356 L12.6846 50.7852 L24.3691 44.0386 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d4.3027 42.1284 m4.3027 32.4526 L12.6846 27.6147 L21.0645 32.4526 L21.0645 42.1284 L12.6846 46.9663 L4.3027 42.1284 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d77.2871 44.3774 m77.2871 30.8843 L65.603 24.1382 L53.9185 30.8843 L53.9185 44.3765 L65.603 51.1226 L77.2871 44.3774 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d57.2202 42.4692 m57.2202 32.7915 L65.603 27.9536 L73.9819 32.7915 L73.9819 42.4692 L65.603 47.3081 L57.2202 42.4692 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d50.7471 44.3774 m50.7471 30.8843 L39.0649 24.1382 L27.3774 30.8843 L27.3774 44.3765 L39.0649 51.1235 L50.7471 44.3774 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d30.6821 42.4692 m30.6821 32.7915 L39.0649 27.9517 L47.4438 32.7915 L47.4438 42.4702 L39.0649 47.3091 L30.6821 42.4692 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d37.479 67.3599 m37.479 53.8682 L25.7944 47.1221 L14.1099 53.8682 L14.1099 67.3599 L25.7944 74.1074 L37.479 67.3599 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d17.4126 65.4526 m17.4126 55.7749 L25.7944 50.937 L34.1743 55.7749 L34.1772 65.4526 L25.7944 70.2905 L17.4126 65.4526 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d64.0161 67.3599 m64.0161 53.8682 L52.3345 47.1221 L40.6475 53.8682 L40.6475 67.3599 L52.3345 74.1074 L64.0161 67.3599 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d43.9536 65.4526 m43.9536 55.7749 L52.3345 50.937 L60.7153 55.7749 L60.7153 65.4526 L52.3345 70.2905 L43.9536 65.4526 Ls%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Jungle Stripes)(Jungle Stripes) 37 19 73 55 [%AI3_Tile(0 O 0 R 1 0 1 0 k 1 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 18 w 4 M []0 d37 37 m73 37 lS%AI6_EndPatternLayer) &(0 O 0 R 0.3451 0 0.6863 0 k 0.3451 0 0.6863 0 K) @(%AI6_BeginPatternLayer0 J 0 j 9 w 4 M []0 d37 37 m73 37 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Mediterranean Tiles)(Mediterranean Tiles) 4.9482 11.5332 39.291 45.8818 [%AI3_Tile(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0.1499 40.748 m10.0083 40.749 L16.9673 33.79 L16.9702 23.9297 L10.0093 16.9697 L0.1509 16.9688 L0.1499 40.748 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.57 0.75 0 0 k 0.57 0.75 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0.1499 40.748 m10.0083 40.749 L16.9673 33.79 L16.9702 23.9297 L10.0093 16.9697 L0.1509 16.9688 L0.1499 40.748 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d16.9712 0.1504 m10.0122 7.1094 L10.0093 16.9697 L16.9702 23.9297 L26.8296 23.9307 L33.7915 16.9727 L33.7915 7.1123 L26.8335 0.1514 L16.9712 0.1504 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.57 0.75 0 0 k 0.57 0.75 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d16.9712 0.1504 m10.0122 7.1094 L10.0093 16.9697 L16.9702 23.9297 L26.8296 23.9307 L33.7915 16.9727 L33.7915 7.1123 L26.8335 0.1514 L16.9712 0.1504 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d16.9673 33.79 m10.0083 40.749 L10.0054 50.6084 L16.9663 57.5693 L26.8257 57.5703 L33.7876 50.6113 L33.7876 40.752 L26.8296 33.791 L16.9673 33.79 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.57 0.75 0 0 k 0.57 0.75 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d16.9673 33.79 m10.0083 40.749 L10.0054 50.6084 L16.9663 57.5693 L26.8257 57.5703 L33.7876 50.6113 L33.7876 40.752 L26.8296 33.791 L16.9673 33.79 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d33.7915 16.9727 m26.8296 23.9307 L26.8296 33.791 L33.7876 40.752 L43.6475 40.7529 L50.6094 33.7939 L50.6094 23.9336 L43.6494 16.9736 L33.7915 16.9727 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.57 0.75 0 0 k 0.57 0.75 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d33.7915 16.9727 m26.8296 23.9307 L26.8296 33.791 L33.7876 40.752 L43.6475 40.7529 L50.6094 33.7939 L50.6094 23.9336 L43.6494 16.9736 L33.7915 16.9727 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.9725 0.9451 0 0 k 0.9725 0.9451 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d43.6514 7.1123 m43.6514 16.9727 L33.7915 16.9727 L33.7915 7.1123 L43.6514 7.1123 Lf26.8296 23.9307 m26.8296 33.791 L16.9702 33.791 L16.9702 23.9307 L26.8296 23.9307 Lf10.0093 7.1094 m10.0093 16.9697 L0.1538 16.9697 L0.1538 7.1094 L10.0093 7.1094 Lf43.6494 40.752 m43.6494 50.6113 L33.7876 50.6113 L33.7876 40.752 L43.6494 40.752 Lf10.0083 40.749 m10.0083 50.6084 L0.1499 50.6084 L0.1499 40.749 L10.0083 40.749 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Pyramids)(Pyramids) 1 1 19.5 19.5 [%AI3_Tile(0 O 0 R 0.1882 0.1294 0.102 0.0118 k 0.1882 0.1294 0.102 0.0118 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 19.5 m10.25 10.25 l19.5 19.5 l1 19.5 lf%AI6_EndPatternLayer) &(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k 0.6235 0.4863 0.4863 0.4784 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.5 1 m10.25 10.25 l1 1 l19.5 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k 0.3529 0.2549 0.2235 0.0667 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 1 m10.25 10.25 l1 19.5 l1 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k 0.4902 0.3647 0.3451 0.2196 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.5 19.5 m10.25 10.25 l19.5 1 l19.5 19.5 lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%%EndSetup0 Auu0 O0 0 0 1 k0 R0 0 0 1 K0 J 0 j 1 w 4 M []0 d211.4214 611.584 m229.4214 611.584 lB211.4214 611.584 m211.4214 609.0986 209.4058 607.084 206.9214 607.084 c204.4351 607.084 202.4214 609.0986 202.4214 611.584 c202.4214 614.0693 204.4351 616.084 206.9214 616.084 c209.4058 616.084 211.4214 614.0693 211.4214 611.584 cbUUuu283.6714 611.584 m301.6714 611.584 lB283.6714 611.584 m283.6714 609.0986 281.6558 607.084 279.1714 607.084 c276.6851 607.084 274.6714 609.0986 274.6714 611.584 c274.6714 614.0693 276.6851 616.084 279.1714 616.084 c281.6558 616.084 283.6714 614.0693 283.6714 611.584 cbUUuu355.6719 611.584 m373.6719 611.584 lB355.6719 611.584 m355.6719 609.0986 353.6563 607.084 351.1719 607.084 c348.6855 607.084 346.6719 609.0986 346.6719 611.584 c346.6719 614.0693 348.6855 616.084 351.1719 616.084 c353.6563 616.084 355.6719 614.0693 355.6719 611.584 cbUUuu427.6719 611.584 m445.6719 611.584 lB427.6719 611.584 m427.6719 609.0986 425.6563 607.084 423.1719 607.084 c420.6855 607.084 418.6719 609.0986 418.6719 611.584 c418.6719 614.0693 420.6855 616.084 423.1719 616.084 c425.6563 616.084 427.6719 614.0693 427.6719 611.584 cbUUuu211.6714 539.584 m229.6714 539.584 lB211.6714 539.584 m211.6714 537.0986 209.6558 535.084 207.1714 535.084 c204.6851 535.084 202.6714 537.0986 202.6714 539.584 c202.6714 542.0693 204.6851 544.084 207.1714 544.084 c209.6558 544.084 211.6714 542.0693 211.6714 539.584 cbU0 0 0 0 k212.4165 580.417 m212.4165 571.417 l221.4165 571.417 l221.4165 580.417 l212.4165 580.417 lbu0 0 0 1 k180.7876 571.0195 m180.7876 589.0195 lB185.2876 566.5195 m185.2876 564.0342 183.272 562.0195 180.7876 562.0195 c178.3013 562.0195 176.2876 564.0342 176.2876 566.5195 c176.2876 569.0049 178.3013 571.0195 180.7876 571.0195 c183.272 571.0195 185.2876 569.0049 185.2876 566.5195 cbUUuu283.6714 539.584 m301.6714 539.584 lB283.6714 539.584 m283.6714 537.0986 281.6558 535.084 279.1714 535.084 c276.6851 535.084 274.6714 537.0986 274.6714 539.584 c274.6714 542.0693 276.6851 544.084 279.1714 544.084 c281.6558 544.084 283.6714 542.0693 283.6714 539.584 cbU0 0 0 0 k284.4165 580.417 m284.4165 571.417 l293.4165 571.417 l293.4165 580.417 l284.4165 580.417 lbu0 0 0 1 k252.7876 571.0195 m252.7876 589.0195 lB257.2876 566.5195 m257.2876 564.0342 255.272 562.0195 252.7876 562.0195 c250.3013 562.0195 248.2876 564.0342 248.2876 566.5195 c248.2876 569.0049 250.3013 571.0195 252.7876 571.0195 c255.272 571.0195 257.2876 569.0049 257.2876 566.5195 cbUUuu355.6719 539.584 m373.6719 539.584 lB355.6719 539.584 m355.6719 537.0986 353.6563 535.084 351.1719 535.084 c348.6855 535.084 346.6719 537.0986 346.6719 539.584 c346.6719 542.0693 348.6855 544.084 351.1719 544.084 c353.6563 544.084 355.6719 542.0693 355.6719 539.584 cbU0 0 0 0 k356.416 580.417 m356.416 571.417 l365.416 571.417 l365.416 580.417 l356.416 580.417 lbu0 0 0 1 k324.7871 571.0195 m324.7871 589.0195 lB329.2871 566.5195 m329.2871 564.0342 327.2715 562.0195 324.7871 562.0195 c322.3008 562.0195 320.2871 564.0342 320.2871 566.5195 c320.2871 569.0049 322.3008 571.0195 324.7871 571.0195 c327.2715 571.0195 329.2871 569.0049 329.2871 566.5195 cbUUuu139.6714 611.584 m157.6714 611.584 lB139.6714 611.584 m139.6714 609.0986 137.6558 607.084 135.1714 607.084 c132.6851 607.084 130.6714 609.0986 130.6714 611.584 c130.6714 614.0693 132.6851 616.084 135.1714 616.084 c137.6558 616.084 139.6714 614.0693 139.6714 611.584 cbUUuu283.6714 467.75 m301.6714 467.75 lB283.6714 467.75 m283.6714 465.2642 281.6558 463.2505 279.1714 463.2505 c276.6851 463.2505 274.6714 465.2642 274.6714 467.75 c274.6714 470.2354 276.6851 472.25 279.1714 472.25 c281.6558 472.25 283.6714 470.2354 283.6714 467.75 cbU0 0 0 0 k284.4165 508.583 m284.4165 499.583 l293.4165 499.583 l293.4165 508.583 l284.4165 508.583 lbu0 0 0 1 k252.7876 499.1855 m252.7876 517.1855 lB257.2876 494.6855 m257.2876 492.2002 255.272 490.1855 252.7876 490.1855 c250.3013 490.1855 248.2876 492.2002 248.2876 494.6855 c248.2876 497.1709 250.3013 499.1855 252.7876 499.1855 c255.272 499.1855 257.2876 497.1709 257.2876 494.6855 cbUUuu211.9214 467.584 m229.9214 467.584 lB211.9214 467.584 m211.9214 465.0981 209.9058 463.0845 207.4214 463.0845 c204.9351 463.0845 202.9214 465.0981 202.9214 467.584 c202.9214 470.0693 204.9351 472.084 207.4214 472.084 c209.9058 472.084 211.9214 470.0693 211.9214 467.584 cbU0 0 0 0 k212.6665 508.417 m212.6665 499.417 l221.6665 499.417 l221.6665 508.417 l212.6665 508.417 lbu0 0 0 1 k181.0376 499.0195 m181.0376 517.0195 lB185.5376 494.5195 m185.5376 492.0342 183.522 490.0195 181.0376 490.0195 c178.5513 490.0195 176.5376 492.0342 176.5376 494.5195 c176.5376 497.0049 178.5513 499.0195 181.0376 499.0195 c183.522 499.0195 185.5376 497.0049 185.5376 494.5195 cbUUuu427.6719 539.584 m445.6719 539.584 lB427.6719 539.584 m427.6719 537.0986 425.6563 535.084 423.1719 535.084 c420.6855 535.084 418.6719 537.0986 418.6719 539.584 c418.6719 542.0693 420.6855 544.084 423.1719 544.084 c425.6563 544.084 427.6719 542.0693 427.6719 539.584 cbU0 0 0 0 k428.416 580.417 m428.416 571.417 l437.416 571.417 l437.416 580.417 l428.416 580.417 lbu0 0 0 1 k396.7871 571.0195 m396.7871 589.0195 lB401.2871 566.5195 m401.2871 564.0342 399.2715 562.0195 396.7871 562.0195 c394.3008 562.0195 392.2871 564.0342 392.2871 566.5195 c392.2871 569.0049 394.3008 571.0195 396.7871 571.0195 c399.2715 571.0195 401.2871 569.0049 401.2871 566.5195 cbUUuu355.6719 467.584 m373.6719 467.584 lB355.6719 467.584 m355.6719 465.0981 353.6563 463.0845 351.1719 463.0845 c348.6855 463.0845 346.6719 465.0981 346.6719 467.584 c346.6719 470.0693 348.6855 472.084 351.1719 472.084 c353.6563 472.084 355.6719 470.0693 355.6719 467.584 cbU0 0 0 0 k356.416 508.417 m356.416 499.417 l365.416 499.417 l365.416 508.417 l356.416 508.417 lbu0 0 0 1 k324.7871 499.0195 m324.7871 517.0195 lB329.2871 494.5195 m329.2871 492.0342 327.2715 490.0195 324.7871 490.0195 c322.3008 490.0195 320.2871 492.0342 320.2871 494.5195 c320.2871 497.0049 322.3008 499.0195 324.7871 499.0195 c327.2715 499.0195 329.2871 497.0049 329.2871 494.5195 cbUUuu427.6719 467.584 m445.6719 467.584 lB427.6719 467.584 m427.6719 465.0981 425.6563 463.0845 423.1719 463.0845 c420.6855 463.0845 418.6719 465.0981 418.6719 467.584 c418.6719 470.0693 420.6855 472.084 423.1719 472.084 c425.6563 472.084 427.6719 470.0693 427.6719 467.584 cbU0 0 0 0 k428.416 508.417 m428.416 499.417 l437.416 499.417 l437.416 508.417 l428.416 508.417 lbu0 0 0 1 k396.7871 499.0195 m396.7871 517.0195 lB401.2871 494.5195 m401.2871 492.0342 399.2715 490.0195 396.7871 490.0195 c394.3008 490.0195 392.2871 492.0342 392.2871 494.5195 c392.2871 497.0049 394.3008 499.0195 396.7871 499.0195 c399.2715 499.0195 401.2871 497.0049 401.2871 494.5195 cbUUuu468.7871 499.0195 m468.7871 517.0195 lB473.2871 494.5195 m473.2871 492.0342 471.2715 490.0195 468.7871 490.0195 c466.3008 490.0195 464.2871 492.0342 464.2871 494.5195 c464.2871 497.0049 466.3008 499.0195 468.7871 499.0195 c471.2715 499.0195 473.2871 497.0049 473.2871 494.5195 cbUUuu468.7871 571.0195 m468.7871 589.0195 lB473.2871 566.5195 m473.2871 564.0342 471.2715 562.0195 468.7871 562.0195 c466.3008 562.0195 464.2871 564.0342 464.2871 566.5195 c464.2871 569.0049 466.3008 571.0195 468.7871 571.0195 c471.2715 571.0195 473.2871 569.0049 473.2871 566.5195 cbUUuu468.5371 427.02 m468.5371 445.02 lB473.0371 422.52 m473.0371 420.0337 471.0215 418.02 468.5371 418.02 c466.0508 418.02 464.0371 420.0337 464.0371 422.52 c464.0371 425.0044 466.0508 427.02 468.5371 427.02 c471.0215 427.02 473.0371 425.0044 473.0371 422.52 cbUUuu468.7871 355.0195 m468.7871 373.0195 lB473.2871 350.5195 m473.2871 348.0332 471.2715 346.0195 468.7871 346.0195 c466.3008 346.0195 464.2871 348.0332 464.2871 350.5195 c464.2871 353.0039 466.3008 355.0195 468.7871 355.0195 c471.2715 355.0195 473.2871 353.0039 473.2871 350.5195 cbUUuu427.4219 395.5845 m445.4219 395.5845 lB427.4219 395.5845 m427.4219 393.0977 425.4063 391.084 422.9219 391.084 c420.4355 391.084 418.4219 393.0977 418.4219 395.5845 c418.4219 398.0688 420.4355 400.0845 422.9219 400.0845 c425.4063 400.0845 427.4219 398.0688 427.4219 395.5845 cbU0 0 0 0 k428.166 436.4165 m428.166 427.4165 l437.166 427.4165 l437.166 436.4165 l428.166 436.4165 lbu0 0 0 1 k396.5371 427.02 m396.5371 445.02 lB401.0371 422.52 m401.0371 420.0337 399.0215 418.02 396.5371 418.02 c394.0508 418.02 392.0371 420.0337 392.0371 422.52 c392.0371 425.0044 394.0508 427.02 396.5371 427.02 c399.0215 427.02 401.0371 425.0044 401.0371 422.52 cbUUuu427.7539 323.584 m445.7539 323.584 lB427.7539 323.584 m427.7539 321.0977 425.7383 319.084 423.2539 319.084 c420.7676 319.084 418.7539 321.0977 418.7539 323.584 c418.7539 326.0684 420.7676 328.084 423.2539 328.084 c425.7383 328.084 427.7539 326.0684 427.7539 323.584 cbU0 0 0 0 k428.5 364.416 m428.5 355.416 l437.5 355.416 l437.5 364.416 l428.5 364.416 lbu0 0 0 1 k396.8711 355.0195 m396.8711 373.0195 lB401.3711 350.5195 m401.3711 348.0332 399.3555 346.0195 396.8711 346.0195 c394.3848 346.0195 392.3711 348.0332 392.3711 350.5195 c392.3711 353.0039 394.3848 355.0195 396.8711 355.0195 c399.3555 355.0195 401.3711 353.0039 401.3711 350.5195 cbUUuu355.7539 395.5845 m373.7539 395.5845 lB355.7539 395.5845 m355.7539 393.0977 353.7383 391.084 351.2539 391.084 c348.7676 391.084 346.7539 393.0977 346.7539 395.5845 c346.7539 398.0688 348.7676 400.0845 351.2539 400.0845 c353.7383 400.0845 355.7539 398.0688 355.7539 395.5845 cbU0 0 0 0 k356.5 436.4165 m356.5 427.4165 l365.5 427.4165 l365.5 436.4165 l356.5 436.4165 lbu0 0 0 1 k324.8711 427.02 m324.8711 445.02 lB329.3711 422.52 m329.3711 420.0337 327.3555 418.02 324.8711 418.02 c322.3848 418.02 320.3711 420.0337 320.3711 422.52 c320.3711 425.0044 322.3848 427.02 324.8711 427.02 c327.3555 427.02 329.3711 425.0044 329.3711 422.52 cbUUuu355.7559 323.584 m373.7559 323.584 lB355.7559 323.584 m355.7559 321.0977 353.7402 319.084 351.2559 319.084 c348.7695 319.084 346.7559 321.0977 346.7559 323.584 c346.7559 326.0684 348.7695 328.084 351.2559 328.084 c353.7402 328.084 355.7559 326.0684 355.7559 323.584 cbU0 0 0 0 k356.5 364.416 m356.5 355.416 l365.5 355.416 l365.5 364.416 l356.5 364.416 lbu0 0 0 1 k324.8711 355.0195 m324.8711 373.0195 lB329.3711 350.5195 m329.3711 348.0332 327.3555 346.0195 324.8711 346.0195 c322.3848 346.0195 320.3711 348.0332 320.3711 350.5195 c320.3711 353.0039 322.3848 355.0195 324.8711 355.0195 c327.3555 355.0195 329.3711 353.0039 329.3711 350.5195 cbUUuu283.7549 395.5845 m301.7549 395.5845 lB283.7549 395.5845 m283.7549 393.0977 281.7393 391.084 279.2549 391.084 c276.7686 391.084 274.7549 393.0977 274.7549 395.5845 c274.7549 398.0688 276.7686 400.0845 279.2549 400.0845 c281.7393 400.0845 283.7549 398.0688 283.7549 395.5845 cbU0 0 0 0 k284.5 436.4165 m284.5 427.4165 l293.5 427.4165 l293.5 436.4165 l284.5 436.4165 lbu0 0 0 1 k252.8711 427.02 m252.8711 445.02 lB257.3711 422.52 m257.3711 420.0337 255.3555 418.02 252.8711 418.02 c250.3848 418.02 248.3711 420.0337 248.3711 422.52 c248.3711 425.0044 250.3848 427.02 252.8711 427.02 c255.3555 427.02 257.3711 425.0044 257.3711 422.52 cbUUuu283.7544 323.584 m301.7544 323.584 lB283.7544 323.584 m283.7544 321.0977 281.7388 319.084 279.2544 319.084 c276.7681 319.084 274.7544 321.0977 274.7544 323.584 c274.7544 326.0684 276.7681 328.084 279.2544 328.084 c281.7388 328.084 283.7544 326.0684 283.7544 323.584 cbU0 0 0 0 k284.4995 364.416 m284.4995 355.416 l293.4995 355.416 l293.4995 364.416 l284.4995 364.416 lbu0 0 0 1 k252.8706 355.0195 m252.8706 373.0195 lB257.3706 350.5195 m257.3706 348.0332 255.355 346.0195 252.8706 346.0195 c250.3843 346.0195 248.3706 348.0332 248.3706 350.5195 c248.3706 353.0039 250.3843 355.0195 252.8706 355.0195 c255.355 355.0195 257.3706 353.0039 257.3706 350.5195 cbUUuu211.7549 323.584 m229.7549 323.584 lB211.7549 323.584 m211.7549 321.0977 209.7393 319.084 207.2549 319.084 c204.7686 319.084 202.7549 321.0977 202.7549 323.584 c202.7549 326.0684 204.7686 328.084 207.2549 328.084 c209.7393 328.084 211.7549 326.0684 211.7549 323.584 cbU0 0 0 0 k212.5 364.416 m212.5 355.416 l221.5 355.416 l221.5 364.416 l212.5 364.416 lbu0 0 0 1 k180.8711 355.0195 m180.8711 373.0195 lB185.3711 350.5195 m185.3711 348.0332 183.3555 346.0195 180.8711 346.0195 c178.3848 346.0195 176.3711 348.0332 176.3711 350.5195 c176.3711 353.0039 178.3848 355.0195 180.8711 355.0195 c183.3555 355.0195 185.3711 353.0039 185.3711 350.5195 cbUUuu211.7544 395.5845 m229.7544 395.5845 lB211.7544 395.5845 m211.7544 393.0977 209.7388 391.084 207.2544 391.084 c204.7681 391.084 202.7544 393.0977 202.7544 395.5845 c202.7544 398.0688 204.7681 400.0845 207.2544 400.0845 c209.7388 400.0845 211.7544 398.0688 211.7544 395.5845 cbU0 0 0 0 k212.4995 436.4165 m212.4995 427.4165 l221.4995 427.4165 l221.4995 436.4165 l212.4995 436.4165 lbu0 0 0 1 k180.8706 427.02 m180.8706 445.02 lB185.3706 422.52 m185.3706 420.0337 183.355 418.02 180.8706 418.02 c178.3843 418.02 176.3706 420.0337 176.3706 422.52 c176.3706 425.0044 178.3843 427.02 180.8706 427.02 c183.355 427.02 185.3706 425.0044 185.3706 422.52 cbUUuu139.7549 467.584 m157.7549 467.584 lB139.7549 467.584 m139.7549 465.0981 137.7393 463.0845 135.2549 463.0845 c132.7686 463.0845 130.7549 465.0981 130.7549 467.584 c130.7549 470.0693 132.7686 472.084 135.2549 472.084 c137.7393 472.084 139.7549 470.0693 139.7549 467.584 cbU0 0 0 0 k140.5 508.417 m140.5 499.417 l149.5 499.417 l149.5 508.417 l140.5 508.417 lbu0 0 0 1 k108.8711 499.0195 m108.8711 517.0195 lB113.3711 494.5195 m113.3711 492.0342 111.3555 490.0195 108.8711 490.0195 c106.3848 490.0195 104.3711 492.0342 104.3711 494.5195 c104.3711 497.0049 106.3848 499.0195 108.8711 499.0195 c111.3555 499.0195 113.3711 497.0049 113.3711 494.5195 cbUUuu139.7549 539.5845 m157.7549 539.5845 lB139.7549 539.5845 m139.7549 537.0991 137.7393 535.0845 135.2549 535.0845 c132.7686 535.0845 130.7549 537.0991 130.7549 539.5845 c130.7549 542.0698 132.7686 544.0845 135.2549 544.0845 c137.7393 544.0845 139.7549 542.0698 139.7549 539.5845 cbU0 0 0 0 k140.5 580.4175 m140.5 571.4175 l149.5 571.4175 l149.5 580.4175 l140.5 580.4175 lbu0 0 0 1 k108.8711 571.02 m108.8711 589.02 lB113.3711 566.52 m113.3711 564.0347 111.3555 562.02 108.8711 562.02 c106.3848 562.02 104.3711 564.0347 104.3711 566.52 c104.3711 569.0054 106.3848 571.02 108.8711 571.02 c111.3555 571.02 113.3711 569.0054 113.3711 566.52 cbUUuu139.7549 395.5845 m157.7549 395.5845 lB139.7549 395.5845 m139.7549 393.0977 137.7393 391.084 135.2549 391.084 c132.7686 391.084 130.7549 393.0977 130.7549 395.5845 c130.7549 398.0688 132.7686 400.0845 135.2549 400.0845 c137.7393 400.0845 139.7549 398.0688 139.7549 395.5845 cbU0 0 0 0 k140.5 436.4165 m140.5 427.4165 l149.5 427.4165 l149.5 436.4165 l140.5 436.4165 lbu0 0 0 1 k108.8711 427.02 m108.8711 445.02 lB113.3711 422.52 m113.3711 420.0337 111.3555 418.02 108.8711 418.02 c106.3848 418.02 104.3711 420.0337 104.3711 422.52 c104.3711 425.0044 106.3848 427.02 108.8711 427.02 c111.3555 427.02 113.3711 425.0044 113.3711 422.52 cbUUuu139.7549 323.584 m157.7549 323.584 lB139.7549 323.584 m139.7549 321.0977 137.7393 319.084 135.2549 319.084 c132.7686 319.084 130.7549 321.0977 130.7549 323.584 c130.7549 326.0684 132.7686 328.084 135.2549 328.084 c137.7393 328.084 139.7549 326.0684 139.7549 323.584 cbU0 0 0 0 k140.5 364.416 m140.5 355.416 l149.5 355.416 l149.5 364.416 l140.5 364.416 lbu0 0 0 1 k108.8711 355.0195 m108.8711 373.0195 lB113.3711 350.5195 m113.3711 348.0332 111.3555 346.0195 108.8711 346.0195 c106.3848 346.0195 104.3711 348.0332 104.3711 350.5195 c104.3711 353.0039 106.3848 355.0195 108.8711 355.0195 c111.3555 355.0195 113.3711 353.0039 113.3711 350.5195 cbUUuu67.7549 323.584 m85.7549 323.584 lB67.7549 323.584 m67.7549 321.0977 65.7393 319.084 63.2549 319.084 c60.7686 319.084 58.7549 321.0977 58.7549 323.584 c58.7549 326.0684 60.7686 328.084 63.2549 328.084 c65.7393 328.084 67.7549 326.0684 67.7549 323.584 cbU0 0 0 0 k68.5 364.416 m68.5 355.416 l77.5 355.416 l77.5 364.416 l68.5 364.416 lbu0 0 0 1 k36.8711 355.0195 m36.8711 373.0195 lB41.3711 350.5195 m41.3711 348.0332 39.3555 346.0195 36.8711 346.0195 c34.3848 346.0195 32.3711 348.0332 32.3711 350.5195 c32.3711 353.0039 34.3848 355.0195 36.8711 355.0195 c39.3555 355.0195 41.3711 353.0039 41.3711 350.5195 cbUUuu67.7544 395.5845 m85.7544 395.5845 lB67.7544 395.5845 m67.7544 393.0977 65.7388 391.084 63.2544 391.084 c60.7681 391.084 58.7544 393.0977 58.7544 395.5845 c58.7544 398.0688 60.7681 400.0845 63.2544 400.0845 c65.7388 400.0845 67.7544 398.0688 67.7544 395.5845 cbU0 0 0 0 k68.4995 436.4165 m68.4995 427.4165 l77.4995 427.4165 l77.4995 436.4165 l68.4995 436.4165 lbu0 0 0 1 k36.8706 427.02 m36.8706 445.02 lB41.3706 422.52 m41.3706 420.0337 39.355 418.02 36.8706 418.02 c34.3843 418.02 32.3706 420.0337 32.3706 422.52 c32.3706 425.0044 34.3843 427.02 36.8706 427.02 c39.355 427.02 41.3706 425.0044 41.3706 422.52 cbUUuu67.7549 467.584 m85.7549 467.584 lB67.7549 467.584 m67.7549 465.0981 65.7393 463.0845 63.2549 463.0845 c60.7686 463.0845 58.7549 465.0981 58.7549 467.584 c58.7549 470.0693 60.7686 472.084 63.2549 472.084 c65.7393 472.084 67.7549 470.0693 67.7549 467.584 cbU0 0 0 0 k68.5 508.417 m68.5 499.417 l77.5 499.417 l77.5 508.417 l68.5 508.417 lbu0 0 0 1 k36.8711 499.0195 m36.8711 517.0195 lB41.3711 494.5195 m41.3711 492.0342 39.3555 490.0195 36.8711 490.0195 c34.3848 490.0195 32.3711 492.0342 32.3711 494.5195 c32.3711 497.0049 34.3848 499.0195 36.8711 499.0195 c39.3555 499.0195 41.3711 497.0049 41.3711 494.5195 cbUUuu67.7549 539.584 m85.7549 539.584 lB67.7549 539.584 m67.7549 537.0986 65.7393 535.084 63.2549 535.084 c60.7686 535.084 58.7549 537.0986 58.7549 539.584 c58.7549 542.0693 60.7686 544.084 63.2549 544.084 c65.7393 544.084 67.7549 542.0693 67.7549 539.584 cbU0 0 0 0 k68.5 580.417 m68.5 571.417 l77.5 571.417 l77.5 580.417 l68.5 580.417 lbu0 0 0 1 k36.8711 571.0195 m36.8711 589.0195 lB41.3711 566.5195 m41.3711 564.0342 39.3555 562.0195 36.8711 562.0195 c34.3848 562.0195 32.3711 564.0342 32.3711 566.5195 c32.3711 569.0049 34.3848 571.0195 36.8711 571.0195 c39.3555 571.0195 41.3711 569.0049 41.3711 566.5195 cbUUuu67.9214 611.584 m85.9214 611.584 lB67.9214 611.584 m67.9214 609.0986 65.9058 607.084 63.4214 607.084 c60.9351 607.084 58.9214 609.0986 58.9214 611.584 c58.9214 614.0693 60.9351 616.084 63.4214 616.084 c65.9058 616.084 67.9214 614.0693 67.9214 611.584 cbUUuu500.0059 611.918 m518.0059 611.918 lB500.0059 611.918 m500.0059 609.4326 497.9902 607.418 495.5059 607.418 c493.0195 607.418 491.0059 609.4326 491.0059 611.918 c491.0059 614.4033 493.0195 616.418 495.5059 616.418 c497.9902 616.418 500.0059 614.4033 500.0059 611.918 cbUUu500.0059 539.918 m518.0059 539.918 lB500.0059 539.918 m500.0059 537.4326 497.9902 535.418 495.5059 535.418 c493.0195 535.418 491.0059 537.4326 491.0059 539.918 c491.0059 542.4033 493.0195 544.418 495.5059 544.418 c497.9902 544.418 500.0059 542.4033 500.0059 539.918 cbU0 0 0 0 k500.75 580.751 m500.75 571.751 l509.75 571.751 l509.75 580.751 l500.75 580.751 lbu0 0 0 1 k500.0059 467.918 m518.0059 467.918 lB500.0059 467.918 m500.0059 465.4321 497.9902 463.4185 495.5059 463.4185 c493.0195 463.4185 491.0059 465.4321 491.0059 467.918 c491.0059 470.4033 493.0195 472.418 495.5059 472.418 c497.9902 472.418 500.0059 470.4033 500.0059 467.918 cbU0 0 0 0 k500.75 508.751 m500.75 499.751 l509.75 499.751 l509.75 508.751 l500.75 508.751 lbuu0 0 0 1 k541.1211 499.3535 m541.1211 517.3535 lB545.6211 494.8535 m545.6211 492.3682 543.6055 490.3535 541.1211 490.3535 c538.6348 490.3535 536.6211 492.3682 536.6211 494.8535 c536.6211 497.3389 538.6348 499.3535 541.1211 499.3535 c543.6055 499.3535 545.6211 497.3389 545.6211 494.8535 cbUUuu541.1211 571.3535 m541.1211 589.3535 lB545.6211 566.8535 m545.6211 564.3682 543.6055 562.3535 541.1211 562.3535 c538.6348 562.3535 536.6211 564.3682 536.6211 566.8535 c536.6211 569.3389 538.6348 571.3535 541.1211 571.3535 c543.6055 571.3535 545.6211 569.3389 545.6211 566.8535 cbUUuu540.8711 427.354 m540.8711 445.354 lB545.3711 422.854 m545.3711 420.3677 543.3555 418.354 540.8711 418.354 c538.3848 418.354 536.3711 420.3677 536.3711 422.854 c536.3711 425.3384 538.3848 427.354 540.8711 427.354 c543.3555 427.354 545.3711 425.3384 545.3711 422.854 cbUUuu541.1211 355.3535 m541.1211 373.3535 lB545.6211 350.8535 m545.6211 348.3672 543.6055 346.3535 541.1211 346.3535 c538.6348 346.3535 536.6211 348.3672 536.6211 350.8535 c536.6211 353.3379 538.6348 355.3535 541.1211 355.3535 c543.6055 355.3535 545.6211 353.3379 545.6211 350.8535 cbUUu499.7559 395.9185 m517.7559 395.9185 lB499.7559 395.9185 m499.7559 393.4316 497.7402 391.418 495.2559 391.418 c492.7695 391.418 490.7559 393.4316 490.7559 395.9185 c490.7559 398.4028 492.7695 400.4185 495.2559 400.4185 c497.7402 400.4185 499.7559 398.4028 499.7559 395.9185 cbU0 0 0 0 k500.5 436.7505 m500.5 427.7505 l509.5 427.7505 l509.5 436.7505 l500.5 436.7505 lbu0 0 0 1 k500.0879 323.918 m518.0879 323.918 lB500.0879 323.918 m500.0879 321.4316 498.0723 319.418 495.5879 319.418 c493.1016 319.418 491.0879 321.4316 491.0879 323.918 c491.0879 326.4023 493.1016 328.418 495.5879 328.418 c498.0723 328.418 500.0879 326.4023 500.0879 323.918 cbU0 0 0 0 k500.834 364.75 m500.834 355.75 l509.834 355.75 l509.834 364.75 l500.834 364.75 lb2 w [8 2 2 2 ]0 d413.334 376 m162 376 L162 557.3325 L413.334 557.3325 L413.334 376 Ls1 w []0 d376.667 362.667 m376.667 356.04 371.2939 350.667 364.667 350.667 C353.333 350.667 L346.7061 350.667 341.333 356.04 341.333 362.667 C341.333 392.667 L341.333 399.2935 346.7061 404.6665 353.333 404.6665 C364.667 404.6665 L371.2939 404.6665 376.667 399.2935 376.667 392.667 C376.667 362.667 Ls427.668 521.9985 m434.2949 521.9985 439.668 516.6255 439.668 509.9985 C439.668 498.6646 L439.668 492.0376 434.2949 486.6646 427.668 486.6646 C397.668 486.6646 L391.041 486.6646 385.668 492.0376 385.668 498.6646 C385.668 509.9985 L385.668 516.6255 391.041 521.9985 397.668 521.9985 C427.668 521.9985 Ls378 542.6665 m378 536.0396 372.627 530.6665 366 530.6665 C354.666 530.6665 L348.0391 530.6665 342.666 536.0396 342.666 542.6665 C342.666 572.6665 L342.666 579.293 348.0391 584.666 354.666 584.666 C366 584.666 L372.627 584.666 378 579.293 378 572.6665 C378 542.6665 Ls305.3335 543.667 m305.3335 537.04 299.9604 531.667 293.3335 531.667 C281.9995 531.667 L275.3726 531.667 269.9995 537.04 269.9995 543.667 C269.9995 573.667 L269.9995 580.2935 275.3726 585.6665 281.9995 585.6665 C293.3335 585.6665 L299.9604 585.6665 305.3335 580.2935 305.3335 573.667 C305.3335 543.667 Ls233.3335 543 m233.3335 536.373 227.9604 531 221.3335 531 C209.9995 531 L203.3726 531 197.9995 536.373 197.9995 543 C197.9995 573 L197.9995 579.6265 203.3726 584.9995 209.9995 584.9995 C221.3335 584.9995 L227.9604 584.9995 233.3335 579.6265 233.3335 573 C233.3335 543 Ls233.3335 363.333 m233.3335 356.7061 227.9604 351.333 221.3335 351.333 C209.9995 351.333 L203.3726 351.333 197.9995 356.7061 197.9995 363.333 C197.9995 393.333 L197.9995 399.9595 203.3726 405.3325 209.9995 405.3325 C221.3335 405.3325 L227.9604 405.3325 233.3335 399.9595 233.3335 393.333 C233.3335 363.333 Ls306.0005 363.667 m306.0005 357.04 300.6274 351.667 294.0005 351.667 C282.6665 351.667 L276.0396 351.667 270.6665 357.04 270.6665 363.667 C270.6665 393.667 L270.6665 400.2935 276.0396 405.6665 282.6665 405.6665 C294.0005 405.6665 L300.6274 405.6665 306.0005 400.2935 306.0005 393.667 C306.0005 363.667 Ls428 449.3335 m434.627 449.3335 440 443.9604 440 437.3335 C440 425.999 L440 419.3721 434.627 413.999 428 413.999 C398 413.999 L391.373 413.999 386 419.3721 386 425.999 C386 437.3335 L386 443.9604 391.373 449.3335 398 449.3335 C428 449.3335 Ls179.335 449.332 m185.9619 449.332 191.335 443.959 191.335 437.332 C191.335 425.9976 L191.335 419.3706 185.9619 413.9976 179.335 413.9976 C149.335 413.9976 L142.708 413.9976 137.335 419.3706 137.335 425.9976 C137.335 437.332 L137.335 443.959 142.708 449.332 149.335 449.332 C179.335 449.332 Ls180.0015 521.9985 m186.6284 521.9985 192.0015 516.6255 192.0015 509.9985 C192.0015 498.6641 L192.0015 492.0371 186.6284 486.6641 180.0015 486.6641 C150.0015 486.6641 L143.3745 486.6641 138.0015 492.0371 138.0015 498.6641 C138.0015 509.9985 L138.0015 516.6255 143.3745 521.9985 150.0015 521.9985 C180.0015 521.9985 Ls0 To1 0 0 1 233.3335 449.9995 0 TpTP0 Tr0 O0 0 0 1 k/_Times-Roman 16 Tf0 Ts100 Tz0 Tt1 TA0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 Tq0 0 Tl0 Tc0 Tw(T) Tx 1 70 Tk(otal-Field Region) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 221.9995 331.667 0 TpTP0 Tr(Scattered-Field Region) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 187.665 297.999 0 TpTP-43.4883 0 Td0 Tr/_Times-Roman 12 Tf1 Ta12 0 Tl(indices specifying) Tx(\r) TX 1 0 Tk1.4355 -12 Td(start of ) Tx 1 18 Tk(TF region) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 404.998 645.9985 0 TpTP-43.4883 0 Td0 Tr(indices specifying) Tx(\r) TX 1 0 Tk3.1025 -12 Td(end ) Tx 1 0 Tk(of ) Tx 1 18 Tk(TF region) Tx 1 0 Tk(\r) TX TO0 R0 0 0 1 K[8 2 1 2 ]0 d224.333 381.501 m195.9658 381.501 167.4463 407.0166 166.833 436.501 c166.667 444.501 168.667 445.835 176.667 445.835 c184.7188 445.835 217.8916 448.0791 225.333 439.001 c233.667 428.835 231.4492 400.665 231.667 392.167 c231.835 385.667 229 381.501 224.333 381.501 cs441 527.5005 m412.6328 527.5005 384.1133 553.0161 383.5 582.5005 c383.334 590.5005 385.334 591.8345 393.334 591.8345 c401.3857 591.8345 434.5586 594.0786 442 585.0005 c450.334 574.8345 448.1162 546.6646 448.334 538.1665 c448.502 531.6665 445.667 527.5005 441 527.5005 csu[]0 d182 309.333 m175.3335 322.667 150.0005 362 175.3335 391.333 cS0 O0 0 0 1 k174.667 390.5605 m170.5083 391.2578 l170.5269 391.4043 l176.1328 394.3252 l177.8115 395.5801 179.4902 396.8354 181.1689 398.0898 c180.1719 396.2466 179.1743 394.4033 178.1777 392.5596 c176.104 386.5879 l175.9771 386.5352 l174.667 390.5605 lfUu0 R0 0 0 1 K400 630 m396 615.333 400.667 611.9995 404.667 601.333 cS0 O0 0 0 1 k404.3086 602.2881 m406.9131 605.604 l407.0332 605.5181 l406.9111 599.1978 l407.208 597.123 407.5049 595.0479 407.8018 592.9731 c406.6621 594.7319 405.5215 596.4907 404.3809 598.249 c400.1328 602.9307 l400.1475 603.0669 l404.3086 602.2881 lfU%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI3 /terminate get execAdobe_pattern_AI3 /terminate get execAdobe_typography_AI3 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_packedarray /terminate get exec%%EOF